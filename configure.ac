dnl This needs some file it can stat
AC_INIT([emperor], [0.2])
PACKAGE_VERSION_NAME=Basil
AC_SUBST([PACKAGE_VERSION_NAME])

AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_AUX_DIR([config])
AC_CONFIG_MACRO_DIR([m4])

AM_INIT_AUTOMAKE
LT_INIT([disable-static])

AC_ARG_WITH([libnotify],
            [AS_HELP_STRING([--without-libnotify],
                            [Disable code that uses libnotify])],
            [],
            [with_libnotify=yes])

AC_PROG_CC
AM_PROG_CC_C_O
AM_PROG_VALAC([0.17.3])

IT_PROG_INTLTOOL([0.35.0])

GETTEXT_PACKAGE=emperor
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], ["$GETTEXT_PACKAGE"],
                                      [The domain to use with gettext])
AM_GLIB_GNU_GETTEXT

PROGRAMNAME_LOCALEDIR=[${datadir}/locale]
AC_SUBST(PROGRAMNAME_LOCALEDIR)

dnl
dnl Check for packages
dnl
PKG_CHECK_MODULES([GTK], [gtk+-3.0])
PKG_CHECK_MODULES([GIO], [gio-unix-2.0])
PKG_CHECK_MODULES([GMODULE], [gmodule-2.0])
PKG_CHECK_MODULES([JSON_GLIB], [json-glib-1.0])
PKG_CHECK_MODULES([GEE], [gee-0.8 >= 0.7.0])

dnl Check for libnotify unless disabled.
if test x$with_libnotify = xyes
then
    PKG_CHECK_MODULES([LIBNOTIFY], [libnotify >= 0.7],
                      [ dnl - found
                       AM_CONDITIONAL([HAVE_LIBNOTIFY], [true])
                       HAVE_LIBNOTIFY=yes
                      ],
                      [ dnl - not found
                       AM_CONDITIONAL([HAVE_LIBNOTIFY], [false])
                       HAVE_LIBNOTIFY=no
                       AC_MSG_WARN([Libnotify >= 0.7 not found. Notifications have been disabled.])
                      ])
else
  AM_CONDITIONAL([HAVE_LIBNOTIFY], [false])
  HAVE_LIBNOTIFY=no
fi

dnl
dnl Configure VALAFLAGS and CFLAGS
dnl
GIO_VALAFLAGS="--pkg=gio-2.0"
AC_SUBST([GIO_VALAFLAGS])
UNIX_VALAFLAGS="--pkg=gio-unix-2.0 --pkg=posix"
AC_SUBST([UNIX_VALAFLAGS])
GTK_VALAFLAGS="--pkg=gtk+-3.0"
AC_SUBST([GTK_VALAFLAGS])
GEE_VALAFLAGS="--pkg=gee-0.8"
AC_SUBST([GEE_VALAFLAGS])
GMODULE_VALAFLAGS="--pkg=gmodule-2.0"
AC_SUBST([GMODULE_VALAFLAGS])
JSON_GLIB_VALAFLAGS="--pkg=json-glib-1.0"
AC_SUBST([JSON_GLIB_VALAFLAGS])

if test x$HAVE_LIBNOTIFY = xyes
then
    LIBNOTIFY_VALAFLAGS="--pkg=libnotify -D HAVE_LIBNOTIFY"
else
    # These need to be rebuilt.
    rm -f src/application/emperor_core.c
    rm -f src/application/mountwait.c
fi
AC_SUBST([LIBNOTIFY_VALAFLAGS])

SOURCE_ROOT=`cd $srcdir; pwd`
AC_SUBST([SOURCE_ROOT])
BUILD_ROOT=`pwd`
AC_SUBST([BUILD_ROOT])

dnl A vala out-of-tree build is not possible. Files generated by valac are
dnl distributed with the source tree and used from there.
EMPEROREXT_VALAFLAGS="--pkg=emperor"
EMPEROREXT_CFLAGS=""
CONFIG_VALAFLAGS="--vapidir=${SOURCE_ROOT}/src/config --pkg=emperor_config"
CONFIG_CFLAGS="-I${BUILD_ROOT}/src/config"

VALA_PACKAGES="$GIO_VALAFLAGS $UNIX_VALAFLAGS $GTK_VALAFLAGS $GEE_VALAFLAGS $CONFIG_VALAFLAGS $JSON_GLIB_VALAFLAGS --vapidir=${SOURCE_ROOT}/src/application"
VALAFLAGS="$VALA_PACKAGES -g $VALAFLAGS"

GLOBAL_CFLAGS="$GLIB_CFLAGS $GIO_CFLAGS $GTK_CFLAGS $GEE_CFLAGS $CONFIG_CFLAGS $JSON_GLIB_CFLAGS -I${SOURCE_ROOT}/src/application"

AC_SUBST([EMPEROREXT_VALAFLAGS])
AC_SUBST([EMPEROREXT_CFLAGS])
AC_SUBST([GLOBAL_CFLAGS])

AC_SUBST([VALA_PACKAGES])
AC_SUBST([VALAFLAGS])

AC_CONFIG_FILES([Makefile po/Makefile.in
                 src/Makefile
                 src/config/Makefile
                 src/application/Makefile
                 src/modules/Makefile
                 data/Makefile
                 data/emperor.desktop.in])
AC_OUTPUT

